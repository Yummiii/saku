// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Saku.Database;

#nullable disable

namespace Saku.Migrations
{
    [DbContext(typeof(SakuDbContext))]
    partial class SakuDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Saku.Models.ChannelModel", b =>
                {
                    b.Property<ulong>("DiscordChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<int?>("BoundUserId")
                        .HasColumnType("int");

                    b.Property<int>("Model")
                        .HasColumnType("int");

                    b.Property<ulong>("State")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("System")
                        .HasColumnType("text");

                    b.HasKey("DiscordChannelId");

                    b.HasIndex("BoundUserId");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("Saku.Models.ChatContextModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("ChatType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsPresentInCurrentContext")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.HasIndex("IsPresentInCurrentContext");

                    b.HasIndex("UserId");

                    b.ToTable("ChatContexts");
                });

            modelBuilder.Entity("Saku.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<ulong>("DiscordId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("State")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("DiscordId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Saku.Models.ChannelModel", b =>
                {
                    b.HasOne("Saku.Models.UserModel", "BoundUser")
                        .WithMany("BoundedChannels")
                        .HasForeignKey("BoundUserId");

                    b.Navigation("BoundUser");
                });

            modelBuilder.Entity("Saku.Models.ChatContextModel", b =>
                {
                    b.HasOne("Saku.Models.ChannelModel", "Channel")
                        .WithMany("ChatContextModels")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Saku.Models.UserModel", "User")
                        .WithMany("ChatContexts")
                        .HasForeignKey("UserId");

                    b.Navigation("Channel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Saku.Models.ChannelModel", b =>
                {
                    b.Navigation("ChatContextModels");
                });

            modelBuilder.Entity("Saku.Models.UserModel", b =>
                {
                    b.Navigation("BoundedChannels");

                    b.Navigation("ChatContexts");
                });
#pragma warning restore 612, 618
        }
    }
}
